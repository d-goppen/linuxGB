#!/bin/bash
# 1 Создание ссылок:
# - создать файл file1 и наполнить его произвольным содержимым.
openssl rand -base64 20 > file1
# - скопировать файл file1 в file2.
cp file1 file2
# - создать символическую ссылку file3 на file1.
ln -s file1 file3
# - создать жесткую ссылку file4 на file1.
ln file1 file4
# - посмотреть, какие айноды у файлов.
ls -li
#-> file1 = 267111
#-> file2 = 267113
#-> file3 = 267115
#-> file4 = 267111
# - удалить file1. Что стало с остальными созданными файлами? Попробовать вывести их на экран.
rm file1
#-> file1 отсутствует
cat file2 # Тут всё в порядке
cat file3 # Не смотря на то, что файл есть в ls, cat сообщает об отсутствии данного файла (symlin, однако)
cat file4 # Тут тоже всё в порядке (hrdlink, однако. Это и есть file1)

# 2 Работа со ссылками:
# - дать созданным файлам другие, произвольные имена.
mv file2 file_second
mv file3 file_third
mv file4 file_fourth
# - создать новую символическую ссылку.
#-> ссылки создадим двумя способами:
ln -s file_second file_sym_1        # Относительный путь
ln -s $(pwd)/file_second file_sym_2 # Абсолютный путь
# - переместить ссылки в другую директорию. Работают ли ссылки? Попробовать вывести их на экран.
mkdir syms
mv *_sym* syms
cd syms
cat file_sym_1 # No such file or directory, т.к. ссылка относительная и при переезде поломалась
cat file_sym_2 # Тут всё ОК, т.к. ссылка абсолютная и действительна пока целевой файл существует

# 3 Права файлов:
# - создать два произвольных файла.
openssl rand -hex 50 > file1
openssl rand -hex 50 > file2
# - первому файлу присвоить права на чтение, запись для владельца и группы; на чтение для всех.
chmod 664 file1
chmod u=rw,g=rw,o=r file1
# - второму файлу присвоить права на чтение, запись только для владельца. Сделать это в численном и символьном виде.
chmod 600s file2
chmod u=rw,g-rwx,o-rwx file2
s
# 4 Создать пользователя, обладающего возможностью выполнять действия от имени суперпользователя.
sudo adduser --ingroup sudo theuser # Тут дополнительно вводим пароль и немного информации о пользователе.

# 5*Создать группу developer, несколько пользователей, входящих в эту группу.
sudo addgroup debelopers
sudo adduser --ingroup developers developer1 # Тут дополнительно вводим пароль и немного информации о пользователе.
sudo adduser --ingroup developers developer2 # Тут дополнительно вводим пароль и немного информации о пользователе.
sudo adduser --ingroup developers developer3 # Тут дополнительно вводим пароль и немного информации о пользователе.
#   Создать директорию для совместной работы.
sudo mkdir /home/dev
sudo chown root:developers /home/dev
#   Сделать так, чтобы созданные одними пользователями файлы могли изменять другие пользователи этой группы.
sudo setfacl -d -m g::rwx o::r /home/dev
#-> Результат манипуляций с правами на /home/dev:
#-> владелец = root, группа = developers
#-> создавать файлы может лишь root и члены группы developers
#-> по-умолчанию любой файл доступен всем членам группы developers для чтения и записи
#-> другие пользователи могут только читать и запускать файлы

# 6*Создать в директории для совместной работы поддиректорию для обмена файлами,
#   но чтобы удалять файлы могли только их создатели.
sudo mkdir /home/dev/exch
sudo setfacl u::rwx /home/dev/exch
sudo setfacl g::rx /home/dev/exch
sudo setfacl o::rx /home/dev/exch
#-> Результат манипуляций с правами на /home/dev/exch:
#-> владелец = root, группа = developers
#-> создавать файлы может лишь root и члены группы developers
#-> по-умолчанию любой файл доступен владельцу полностью, всем остальным пользователям - только для чтения

# 7*Создать директорию, в которой есть несколько файлов.
#   Сделать так, чтобы открыть файлы можно только, зная имя файла, а через ls список файлов посмотреть нельзя.
mkdir ~/emptylike
openssl rand -hex 20 > ~/emptylike/file1
openssl rand -hex 20 > ~/emptylike/file2
openssl rand -hex 20 > ~/emptylike/file3
chmod 333 ~/emptylike
#-> Результат манипуляций с правами на ~/emptylike:
#-> Любой может создавать, просматривать, изменять и удалять файлы.
#-> Никто не может прочитать содержимое каталога.
#-> Команда rm -r ~/emptylike выдаст ошибку отказа в доступе, если каталог не пуст
#-> если каталог пуст, команда отработает успешно.